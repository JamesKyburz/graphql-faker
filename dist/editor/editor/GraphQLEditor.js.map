{"version":3,"file":"GraphQLEditor.js","sourceRoot":"","sources":["../../../src/editor/editor/GraphQLEditor.tsx"],"names":[],"mappings":";;;;;;;;;;;;AAAA,mCAAiC;AACjC,mCAAiC;AACjC,mCAAiC;AACjC,mCAAiC;AACjC,mCAAiC;AACjC,4CAA0C;AAC1C,+CAA6C;AAC7C,+CAA6C;AAC7C,4CAA0C;AAC1C,4CAA0C;AAC1C,2CAAyC;AACzC,sCAAoC;AACpC,qCAAmC;AACnC,qCAAmC;AAEnC,uCAAyC;AAGzC,mCAAwF;AACxF,iCAA4B;AAC5B,6BAA+B;AAW/B;IAA2C,iCAAmC;IAO5E,uBAAY,KAAK;QAAjB,YACE,kBAAM,KAAK,CAAC,SAIb;QAHC,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC;QAC/B,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,KAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;;IACjC,CAAC;IAED,sCAAc,GAAd,UAAe,SAAS,EAAE,YAAY;QACpC,uBAAuB;QACvB,IAAI,CAAC;YACH,IAAI,CAAC,OAAO,GAAG,qBAAW,CAAC,SAAS,CAAC,CAAC;YACtC,EAAE,CAAC,CAAC,YAAY,CAAC;gBACf,IAAI,CAAC,OAAO,GAAG,sBAAY,CAAC,IAAI,CAAC,OAAO,EAAE,eAAK,CAAC,YAAY,CAAC,CAAC,CAAC;QACnE,CAAC;QAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACX,kBAAkB;QACpB,CAAC;IACH,CAAC;IAED,sBAAI,iCAAM;aAAV;YACE,IAAI,SAAS,EAAE,YAAY,CAAC;YAC5B,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;gBAC1B,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;gBACpC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;YACzD,CAAC;YACD,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;YAC7C,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACtB,CAAC;;;OAAA;IAED,yCAAiB,GAAjB;QAAA,iBAyDC;QAxDC,IAAM,MAAM,GAAG,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE;YACpC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,EAAE;YAC7B,WAAW,EAAE,IAAI;YACjB,OAAO,EAAE,CAAC;YACV,IAAI,EAAE,SAAS;YACf,KAAK,EAAE,UAAU;YACjB,MAAM,EAAE,SAAS;YACjB,iBAAiB,EAAE,IAAI;YACvB,aAAa,EAAE,IAAI;YACnB,uBAAuB,EAAE,IAAI;YAC7B,UAAU,EAAE;gBACV,WAAW,EAAE,CAAC;aACf;YACD,IAAI,EAAE;gBACJ,MAAM,EAAE,IAAI,CAAC,MAAM;aACpB;YACD,WAAW,EAAE;gBACX,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,cAAc,EAAE,KAAK;gBACrB,cAAc,EAAE,KAAK;aACtB;YACD,IAAI,EAAE;gBACJ,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,iBAAiB,EAAE,UAAA,IAAI,IAAI,OAAA,gBAAM,CAAC,IAAI,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAhC,CAAgC;aAC5D;YACD,IAAI,EAAE;gBACJ,MAAM,EAAE,IAAI,CAAC,MAAM;aACpB;YACD,OAAO,EAAE,CAAC,wBAAwB,EAAE,uBAAuB,CAAC;YAC5D,SAAS,EAAE;gBACT,WAAW,EAAE,cAAM,OAAA,MAAM,CAAC,QAAQ,CAAC,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,EAAzC,CAAyC;gBAC5D,YAAY,EAAE,cAAM,OAAA,MAAM,CAAC,QAAQ,CAAC,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,EAAzC,CAAyC;gBAC7D,WAAW,EAAE,cAAM,OAAA,MAAM,CAAC,QAAQ,CAAC,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,EAAzC,CAAyC;gBAC5D,aAAa,EAAE,cAAM,OAAA,MAAM,CAAC,QAAQ,CAAC,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,EAAzC,CAAyC;gBAC9D,WAAW,EAAE;oBACX,EAAE,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;wBACzB,KAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;oBACzB,CAAC;gBACH,CAAC;gBACD,YAAY,EAAE;oBACZ,EAAE,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;wBACzB,KAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;oBACzB,CAAC;gBACH,CAAC;gBACD,sBAAsB;gBACtB,WAAW,EAAE,eAAe;gBAC5B,YAAY,EAAE,gBAAgB;gBAC9B,UAAU,EAAE,aAAa;gBACzB,WAAW,EAAE,cAAc;aAC5B;SACF,CAAC,CAAC;QAEH,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC7C,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC7C,MAAM,CAAC,EAAE,CAAC,eAAe,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC7D,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAED,8BAAM,GAAN;QAAA,iBASC;QARC,MAAM,CAAC,CACL,6BACE,SAAS,EAAC,gBAAgB,EAC1B,GAAG,EAAE,UAAA,IAAI;gBACP,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YACpB,CAAC,GACD,CACH,CAAC;IACJ,CAAC;IAED,0CAAkB,GAAlB,UAAmB,SAAS;QAC1B,mEAAmE;QACnE,iEAAiE;QACjE,cAAc;QACd,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,EAAE,CAAC,CACD,IAAI,CAAC,KAAK,CAAC,KAAK,KAAK,SAAS,CAAC,KAAK;YACpC,IAAI,CAAC,KAAK,CAAC,KAAK,KAAK,IAAI,CAAC,WAC5B,CAAC,CAAC,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,KAAK,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;gBAC1C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;gBACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACzC,CAAC;YACD,IAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC;QACD,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;IACjC,CAAC;IAED,oCAAY,GAAZ;QACE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC9C,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QACrD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC9C,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC9C,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IACxD,CAAC;IAED,4CAAoB,GAApB;QACE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACxC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACxC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACxD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,CAAC;IAED,gCAAQ,GAAR,UAAS,EAAE,EAAE,KAAK;QAChB,IAAM,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC;QAC3B,EAAE,CAAC,CACD,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,CAAC,IAAI,UAAU;YACxC,CAAC,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,CAAC,IAAI,UAAU;YAC3D,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,KAAK,GAAG,CAAC,IAAI,aAAa;YACjD,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,KAAK,EAAE,CAAC,IAAI,IAAI;YACvC,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,KAAK,EAAE,CAAC,IAAI,IAAI;YACvC,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC,IAAI;QACvC,CAAC,CAAC,CAAC;YACD,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;QAC1C,CAAC;IACH,CAAC;IAED,+BAAO,GAAP;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;YAC1C,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;gBACtB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACtC,CAAC;QACH,CAAC;IACH,CAAC;IAED;;;OAGG;IACH,wCAAgB,GAAhB,UAAiB,EAAE,EAAE,IAAI;QACvB,eAAe,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;IAC5B,CAAC;IACH,oBAAC;AAAD,CAAC,AA1KD,CAA2C,KAAK,CAAC,SAAS,GA0KzD;;AAED;;;GAGG;AACH,yBAAyB,EAAE,EAAE,IAAI,EAAE,uBAAwB;IACzD,IAAI,WAAW,CAAC;IAChB,IAAI,WAAW,CAAC;IAEhB,sEAAsE;IACtE,UAAU,CAAC,EAAE,CAAC,IAAI,EAAE,QAAQ,EAAE,UAAC,GAAG,EAAE,EAAE;QACpC,oEAAoE;QACpE,sCAAsC;QACtC,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACjB,IAAM,SAAO,GAAG,EAAE,CAAC,UAAU,CAAC;YAE9B,qEAAqE;YACrE,gCAAgC;YAChC,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC5C,WAAW,CAAC,SAAS,GAAG,6BAA6B,CAAC;YACtD,SAAO,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;YAEjC,oEAAoE;YACpE,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC5C,WAAW,CAAC,SAAS,GAAG,6BAA6B,CAAC;YACtD,SAAO,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;YAEjC,wEAAwE;YACxE,oDAAoD;YACpD,IAAI,YAAU,CAAC;YACf,SAAO,CAAC,gBAAgB,CACtB,gBAAgB,EAChB,CAAC,YAAU,GAAG,UAAA,KAAK;gBACjB,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,KAAK,SAAO,CAAC,CAAC,CAAC;oBAC7B,SAAO,CAAC,mBAAmB,CAAC,gBAAgB,EAAE,YAAU,CAAC,CAAC;oBAC1D,WAAW,GAAG,IAAI,CAAC;oBACnB,WAAW,GAAG,IAAI,CAAC;oBACnB,YAAU,GAAG,IAAI,CAAC;gBACpB,CAAC;YACH,CAAC,CAAC,CACH,CAAC;QACJ,CAAC;QAED,4DAA4D;QAC5D,IAAM,WAAW,GAAG,GAAG,CAAC,WAAW;cAC/B,gBAAM,CAAC,GAAG,CAAC,WAAW,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;cAC3C,mBAAmB,CAAC;QACxB,IAAM,IAAI,GAAG,GAAG,CAAC,IAAI;cACjB,yBAAyB,GAAG,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,SAAS;cAC5D,EAAE,CAAC;QAEP,WAAW,CAAC,SAAS;YACnB,uBAAuB;gBACvB,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,KAAK;sBAC9B,KAAK,GAAG,IAAI,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;sBACnC,IAAI,GAAG,WAAW,CAAC;gBACvB,QAAQ,CAAC;QAEX,EAAE,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC;YACrB,IAAM,MAAM,GAAG,GAAG,CAAC,iBAAiB;kBAChC,gBAAM,CAAC,GAAG,CAAC,iBAAiB,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;kBACjD,EAAE,CAAC;YACP,WAAW,CAAC,SAAS;gBACnB,mDAAmD,GAAG,MAAM,CAAC;YAC/D,WAAW,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;QACtC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,WAAW,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;QACrC,CAAC;QAED,wBAAwB;QACxB,EAAE,CAAC,CAAC,uBAAuB,CAAC,CAAC,CAAC;YAC5B,uBAAuB,CAAC,WAAW,CAAC,CAAC;QACvC,CAAC;IACH,CAAC,CAAC,CAAC;AACL,CAAC;AAED,oBAAoB,IAAI;IACtB,EAAE,CAAC,CAAC,IAAI,YAAY,wBAAc,CAAC,CAAC,CAAC;QACnC,MAAM,CAAI,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,MAAG,CAAC;IACvC,CAAC;IACD,EAAE,CAAC,CAAC,IAAI,YAAY,qBAAW,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,MAAI,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,MAAG,CAAC;IACxC,CAAC;IACD,MAAM,CAAC,2BAAuB,IAAI,CAAC,IAAI,SAAM,CAAC;AAChD,CAAC","sourcesContent":["import 'codemirror-graphql/hint';\nimport 'codemirror-graphql/info';\nimport 'codemirror-graphql/jump';\nimport 'codemirror-graphql/lint';\nimport 'codemirror-graphql/mode';\nimport 'codemirror/addon/comment/comment';\nimport 'codemirror/addon/edit/closebrackets';\nimport 'codemirror/addon/edit/matchbrackets';\nimport 'codemirror/addon/fold/brace-fold';\nimport 'codemirror/addon/fold/foldgutter';\nimport 'codemirror/addon/hint/show-hint';\nimport 'codemirror/addon/lint/lint';\nimport 'codemirror/keymap/sublime';\nimport 'codemirror/keymap/sublime';\n\nimport * as CodeMirror from 'codemirror';\n\nimport { GraphQLSchema } from 'graphql';\nimport { buildSchema, extendSchema, GraphQLList, GraphQLNonNull, parse } from 'graphql';\nimport marked from 'marked';\nimport * as React from 'react';\nimport { PropTypes } from 'react';\n\ntype GraphQLEditorProps = {\n  value: string;\n  onEdit: (val: string) => void,\n  onCommand: () => void;\n  extendMode: boolean;\n  schemaPrefix: string;\n};\n\nexport default class GraphQLEditor extends React.Component<GraphQLEditorProps> {\n  cachedValue: string;\n  editor: CodeMirror | undefined;\n  ignoreChangeEvent: boolean;\n  _schema: GraphQLSchema | null;\n  _node: any;\n\n  constructor(props) {\n    super(props);\n    this.cachedValue = props.value;\n    this._schema = null;\n    this.ignoreChangeEvent = false;\n  }\n\n  tryBuildSchema(schemaIDL, extensionIDL) {\n    // TODO: add throttling\n    try {\n      this._schema = buildSchema(schemaIDL);\n      if (extensionIDL)\n        this._schema = extendSchema(this._schema, parse(extensionIDL));\n    } catch (e) {\n      // skip error here\n    }\n  }\n\n  get schema() {\n    let schemaIDL, extensionIDL;\n    if (this.props.extendMode) {\n      schemaIDL = this.props.schemaPrefix;\n      extensionIDL = this.props.value;\n    } else {\n      schemaIDL = this.props.schemaPrefix + this.props.value;\n    }\n    this.tryBuildSchema(schemaIDL, extensionIDL);\n    return this._schema;\n  }\n\n  componentDidMount() {\n    const editor = CodeMirror(this._node, {\n      value: this.props.value || '',\n      lineNumbers: true,\n      tabSize: 2,\n      mode: 'graphql',\n      theme: 'graphiql',\n      keyMap: 'sublime',\n      autoCloseBrackets: true,\n      matchBrackets: true,\n      showCursorWhenSelecting: true,\n      foldGutter: {\n        minFoldSize: 4,\n      },\n      lint: {\n        schema: this.schema,\n      },\n      hintOptions: {\n        schema: this.schema,\n        closeOnUnfocus: false,\n        completeSingle: false,\n      },\n      info: {\n        schema: this.schema,\n        renderDescription: text => marked(text, { sanitize: true }),\n      },\n      jump: {\n        schema: this.schema,\n      },\n      gutters: ['CodeMirror-linenumbers', 'CodeMirror-foldgutter'],\n      extraKeys: {\n        'Cmd-Space': () => editor.showHint({ completeSingle: true }),\n        'Ctrl-Space': () => editor.showHint({ completeSingle: true }),\n        'Alt-Space': () => editor.showHint({ completeSingle: true }),\n        'Shift-Space': () => editor.showHint({ completeSingle: true }),\n        'Cmd-Enter': () => {\n          if (this.props.onCommand) {\n            this.props.onCommand();\n          }\n        },\n        'Ctrl-Enter': () => {\n          if (this.props.onCommand) {\n            this.props.onCommand();\n          }\n        },\n        // Editor improvements\n        'Ctrl-Left': 'goSubwordLeft',\n        'Ctrl-Right': 'goSubwordRight',\n        'Alt-Left': 'goGroupLeft',\n        'Alt-Right': 'goGroupRight',\n      },\n    });\n\n    editor.on('change', this._onEdit.bind(this));\n    editor.on('keyup', this._onKeyUp.bind(this));\n    editor.on('hasCompletion', this._onHasCompletion.bind(this));\n    this.editor = editor;\n  }\n\n  render() {\n    return (\n      <div\n        className=\"graphql-editor\"\n        ref={node => {\n          this._node = node;\n        }}\n      />\n    );\n  }\n\n  componentDidUpdate(prevProps) {\n    // Ensure the changes caused by this update are not interpretted as\n    // user-input changes which could otherwise result in an infinite\n    // event loop.\n    this.ignoreChangeEvent = true;\n    if (\n      this.props.value !== prevProps.value &&\n      this.props.value !== this.cachedValue\n    ) {\n      if (this.props.value !== this.cachedValue) {\n        this.cachedValue = this.props.value;\n        this.editor.setValue(this.props.value);\n      }\n      this.updateSchema();\n    }\n    this.ignoreChangeEvent = false;\n  }\n\n  updateSchema() {\n    this.editor.options.lint.schema = this.schema;\n    this.editor.options.hintOptions.schema = this.schema;\n    this.editor.options.info.schema = this.schema;\n    this.editor.options.jump.schema = this.schema;\n    CodeMirror.signal(this.editor, 'change', this.editor);\n  }\n\n  componentWillUnmount() {\n    this.editor.off('change', this._onEdit);\n    this.editor.off('keyup', this._onKeyUp);\n    this.editor.off('hasCompletion', this._onHasCompletion);\n    this.editor = null;\n  }\n\n  _onKeyUp(cm, event) {\n    const code = event.keyCode;\n    if (\n      (code >= 65 && code <= 90) || // letters\n      (!event.shiftKey && code >= 48 && code <= 57) || // numbers\n      (event.shiftKey && code === 189) || // underscore\n      (event.shiftKey && code === 50) || // @\n      (event.shiftKey && code === 57) || // (\n      (event.shiftKey && code === 186) // :\n    ) {\n      this.editor.execCommand('autocomplete');\n    }\n  }\n\n  _onEdit() {\n    if (!this.ignoreChangeEvent) {\n      this.cachedValue = this.editor.getValue();\n      if (this.props.onEdit) {\n        this.props.onEdit(this.cachedValue);\n      }\n    }\n  }\n\n  /**\n   * Render a custom UI for CodeMirror's hint which includes additional info\n   * about the type and description for the selected context.\n   */\n  _onHasCompletion(cm, data) {\n    onHasCompletion(cm, data);\n  }\n}\n\n/**\n * Render a custom UI for CodeMirror's hint which includes additional info\n * about the type and description for the selected context.\n */\nfunction onHasCompletion(cm, data, onHintInformationRender?) {\n  let information;\n  let deprecation;\n\n  // When a hint result is selected, we augment the UI with information.\n  CodeMirror.on(data, 'select', (ctx, el) => {\n    // Only the first time (usually when the hint UI is first displayed)\n    // do we create the information nodes.\n    if (!information) {\n      const hintsUl = el.parentNode;\n\n      // This \"information\" node will contain the additional info about the\n      // highlighted typeahead option.\n      information = document.createElement('div');\n      information.className = 'CodeMirror-hint-information';\n      hintsUl.appendChild(information);\n\n      // This \"deprecation\" node will contain info about deprecated usage.\n      deprecation = document.createElement('div');\n      deprecation.className = 'CodeMirror-hint-deprecation';\n      hintsUl.appendChild(deprecation);\n\n      // When CodeMirror attempts to remove the hint UI, we detect that it was\n      // removed and in turn remove the information nodes.\n      let onRemoveFn;\n      hintsUl.addEventListener(\n        'DOMNodeRemoved',\n        (onRemoveFn = event => {\n          if (event.target === hintsUl) {\n            hintsUl.removeEventListener('DOMNodeRemoved', onRemoveFn);\n            information = null;\n            deprecation = null;\n            onRemoveFn = null;\n          }\n        }),\n      );\n    }\n\n    // Now that the UI has been set up, add info to information.\n    const description = ctx.description\n      ? marked(ctx.description, { sanitize: true })\n      : 'Self descriptive.';\n    const type = ctx.type\n      ? '<span class=\"infoType\">' + renderType(ctx.type) + '</span>'\n      : '';\n\n    information.innerHTML =\n      '<div class=\"content\">' +\n      (description.slice(0, 3) === '<p>'\n        ? '<p>' + type + description.slice(3)\n        : type + description) +\n      '</div>';\n\n    if (ctx.isDeprecated) {\n      const reason = ctx.deprecationReason\n        ? marked(ctx.deprecationReason, { sanitize: true })\n        : '';\n      deprecation.innerHTML =\n        '<span class=\"deprecation-label\">Deprecated</span>' + reason;\n      deprecation.style.display = 'block';\n    } else {\n      deprecation.style.display = 'none';\n    }\n\n    // Additional rendering?\n    if (onHintInformationRender) {\n      onHintInformationRender(information);\n    }\n  });\n}\n\nfunction renderType(type) {\n  if (type instanceof GraphQLNonNull) {\n    return `${renderType(type.ofType)}!`;\n  }\n  if (type instanceof GraphQLList) {\n    return `[${renderType(type.ofType)}]`;\n  }\n  return `<a class=\"typeName\">${type.name}</a>`;\n}\n"]}