{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/editor/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import './css/app.css';\nimport './css/codemirror.css';\nimport './editor/editor.css';\nimport 'graphiql/graphiql.css';\n\nimport * as classNames from 'classnames';\nimport * as GraphiQL from 'graphiql';\nimport { buildSchema, extendSchema, GraphQLSchema, parse } from 'graphql';\nimport * as fetch from 'isomorphic-fetch';\nimport * as fakeIDL from 'raw-loader!../fake_definition.graphql';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport GraphQLEditor from './editor/GraphQLEditor';\nimport { ConsoleIcon, EditIcon, GithubIcon } from './icons';\n\ntype FakeEditorState = {\n  value: string | null;\n  cachedValue: string | null;\n  activeTab: number;\n  dirty: boolean;\n  error: string | null;\n  status: string | null;\n  schema?: GraphQLSchema;\n  extendMode?: boolean;\n};\n\nclass FakeEditor extends React.Component<any, FakeEditorState> {\n  proxiedSchemaIDL: string;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: null,\n      cachedValue: null,\n      activeTab: 0,\n      dirty: false,\n      error: null,\n      status: null,\n      schema: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.fetcher('/user-idl')\n      .then(response => response.json())\n      .then(idls => {\n        this.updateValue(idls);\n      });\n\n    window.onbeforeunload = () => {\n      if (this.state.dirty) return 'You have unsaved changes. Exit?';\n    };\n  }\n\n  fetcher(url, options = {}) {\n    const {protocol, host} = window.location;\n    const baseUrl = `${protocol}//${host}`;\n    return fetch(baseUrl + url, {\n      credentials: 'include',\n      ...options,\n    });\n  }\n\n  graphQLFetcher(graphQLParams) {\n    return this.fetcher('/graphql', {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(graphQLParams),\n    }).then(response => response.json());\n  }\n\n  updateValue({ schemaIDL, extensionIDL }) {\n    let value = extensionIDL || schemaIDL;\n    this.proxiedSchemaIDL = extensionIDL ? schemaIDL : null;\n    this.setState({\n      value,\n      cachedValue: value,\n      extendMode: !!extensionIDL,\n    });\n    this.updateIdl(value, true);\n  }\n\n  postIDL(idl) {\n    return this.fetcher('/user-idl', {\n      method: 'post',\n      headers: { 'Content-Type': 'text/plain' },\n      body: idl,\n    });\n  }\n\n  updateIdl(value, noError = false) {\n    let extensionIDL;\n    let schemaIDL;\n    if (this.state.extendMode) {\n      extensionIDL = value;\n      schemaIDL = this.proxiedSchemaIDL;\n    } else {\n      schemaIDL = value;\n    }\n    let fullIdl = schemaIDL + '\\n' + fakeIDL;\n    try {\n      let schema = buildSchema(fullIdl);\n      if (extensionIDL) schema = extendSchema(schema, parse(extensionIDL));\n      this.setState(prevState => ({\n        ...prevState,\n        schema: schema,\n        error: null,\n      }));\n      return true;\n    } catch (e) {\n      if (noError) return;\n      this.setState(prevState => ({ ...prevState, error: e.message }));\n      return false;\n    }\n  }\n\n  setStatus(status, delay) {\n    this.setState(prevState => ({ ...prevState, status: status }));\n    if (!delay) return;\n    setTimeout(() => {\n      this.setState(prevState => ({ ...prevState, status: null }));\n    }, delay);\n  }\n\n  saveUserIDL = () => {\n    let { value, dirty } = this.state;\n    if (!dirty) return;\n\n    if (!this.updateIdl(value)) return;\n\n    this.postIDL(value).then(res => {\n      if (res.ok) {\n        this.setStatus('Saved!', 2000);\n        return this.setState(prevState => ({\n          ...prevState,\n          cachedValue: value,\n          dirty: false,\n          error: null,\n        }));\n      } else {\n        res.text().then(errorMessage => {\n          return this.setState(prevState => ({\n            ...prevState,\n            error: errorMessage,\n          }));\n        });\n      }\n    });\n  };\n\n  switchTab(tab) {\n    this.setState(prevState => ({ ...prevState, activeTab: tab }));\n  }\n\n  onEdit = val => {\n    if (this.state.error) this.updateIdl(val);\n    this.setState(prevState => ({\n      ...prevState,\n      value: val,\n      dirty: val !== this.state.cachedValue,\n    }));\n  };\n\n  render() {\n    let { value, activeTab, dirty, extendMode } = this.state;\n    let prefixIDL = fakeIDL + (this.proxiedSchemaIDL || '');\n    return (\n      <div className=\"faker-editor-container\">\n        <nav>\n          <div className=\"logo\">\n            <a href=\"https://github.com/APIs-guru/graphql-faker\" target=\"_blank\">\n              {' '}\n              <img src=\"./logo.svg\" />{' '}\n            </a>\n          </div>\n          <ul>\n            <li\n              onClick={() => this.switchTab(0)}\n              className={classNames({\n                '-active': activeTab === 0,\n                '-dirty': dirty,\n              })}\n            >\n              {' '}\n              <EditIcon />{' '}\n            </li>\n            <li\n              onClick={() => this.state.schema && this.switchTab(1)}\n              className={classNames({\n                '-disabled': !this.state.schema,\n                '-active': activeTab === 1,\n              })}\n            >\n              {' '}\n              <ConsoleIcon />{' '}\n            </li>\n            <li className=\"-pulldown -link\">\n              <a href=\"https://github.com/APIs-guru/graphql-faker\" target=\"_blank\">\n                {' '}\n                <GithubIcon />{' '}\n              </a>\n            </li>\n          </ul>\n        </nav>\n        <div className=\"tabs-container\">\n          <div\n            className={classNames('tab-content', 'editor-container', {\n              '-active': activeTab === 0,\n            })}\n          >\n            <GraphQLEditor\n              schemaPrefix={prefixIDL}\n              extendMode={!!extendMode}\n              onEdit={this.onEdit}\n              onCommand={this.saveUserIDL}\n              value={value || ''}\n            />\n            <div className=\"action-panel\">\n              <a\n                className={classNames(\"material-button\", {\n                  '-disabled': !dirty,\n                })}\n                onClick={this.saveUserIDL}>\n                <span> Save </span>\n              </a>\n              <div className=\"status-bar\">\n                <span className=\"status\"> {this.state.status} </span>\n                <span className=\"error-message\">{this.state.error}</span>\n              </div>\n            </div>\n          </div>\n          <div\n            className={classNames('tab-content', {\n              '-active': activeTab === 1,\n            })}\n          >\n            {this.state.schema && (\n              <GraphiQL fetcher={e => this.graphQLFetcher(e)} schema={this.state.schema} />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<FakeEditor />, document.getElementById('container'));\n"]}